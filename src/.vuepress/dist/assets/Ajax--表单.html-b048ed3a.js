import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o,c,a,b as e,e as l,d as n}from"./app-b9bccecb.js";const p={},d=n(`<h2 id="form表单与模板引擎" tabindex="-1"><a class="header-anchor" href="#form表单与模板引擎" aria-hidden="true">#</a> <code>form</code>表单与模板引擎</h2><h3 id="表单的组成" tabindex="-1"><a class="header-anchor" href="#表单的组成" aria-hidden="true">#</a> 表单的组成</h3><ul><li>表单标签</li><li>表单域</li><li>表单按钮</li></ul><h3 id="form-标签的属性" tabindex="-1"><a class="header-anchor" href="#form-标签的属性" aria-hidden="true">#</a> <code>&lt;form&gt;</code>标签的属性</h3><ul><li><code>&lt;form&gt;</code>标签用来采集数据，<code>&lt;form&gt;</code>标签的属性则是来用规定如何把采集到的数据发送到服务器</li></ul><figure><img src="https://cdn.nlark.com/yuque/0/2023/png/35273604/1685589355817-752f49ff-5415-455d-94bc-b955e2b17fc1.png#averageHue=%23b9d5ed&amp;clientId=u305509f4-2998-4&amp;from=paste&amp;height=193&amp;id=u14ce71cb&amp;originHeight=289&amp;originWidth=743&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=96597&amp;status=done&amp;style=none&amp;taskId=ud829c9a3-a5b0-45d8-b4c8-65419c8e81e&amp;title=&amp;width=495.3333333333333" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h4 id="action" tabindex="-1"><a class="header-anchor" href="#action" aria-hidden="true">#</a> <code>action</code></h4><ul><li><code>action</code>属性用来规定当提交表单时，向何处发送表单数据</li><li><code>action</code>属性的值应该是后端提供的一个URL地址，这个URL地址专门负责接受表单提交过来的数据</li><li>当<code>&lt;form&gt;</code>表单在为规定<code>action</code>属性的情况下，<code>action</code>的默认值为当前页的URL地址</li></ul><h4 id="target" tabindex="-1"><a class="header-anchor" href="#target" aria-hidden="true">#</a> <code>target</code></h4><ul><li><code>target</code>属性用来规定在何处打开<code>action URL</code></li></ul><figure><img src="https://cdn.nlark.com/yuque/0/2023/png/35273604/1685589764916-6a738340-496a-4bee-b581-045b8a598be6.png#averageHue=%23bdd8ee&amp;clientId=u305509f4-2998-4&amp;from=paste&amp;height=146&amp;id=u14d235c7&amp;originHeight=219&amp;originWidth=712&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=59358&amp;status=done&amp;style=none&amp;taskId=u2e371ed4-42fa-4812-a6f2-ec544184bfe&amp;title=&amp;width=474.6666666666667" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h4 id="method" tabindex="-1"><a class="header-anchor" href="#method" aria-hidden="true">#</a> <code>method</code></h4><ul><li><code>method</code>属性用来规定以何种方式把表单数据提交到<code>action URL</code></li><li>默认值为<code>get</code></li></ul><h4 id="enctype" tabindex="-1"><a class="header-anchor" href="#enctype" aria-hidden="true">#</a> <code>enctype</code></h4><ul><li><code>enctype</code>属性用来规定在发送表单数据之前如何对数据进行编码</li><li>默认值：application/x-www-form-urlencoded，表示在发送前编码所有的字符</li></ul><figure><img src="https://cdn.nlark.com/yuque/0/2023/png/35273604/1685590345269-40ca3520-9316-4b3e-9e8c-eec60a3feb1d.png#averageHue=%23b2cee7&amp;clientId=u305509f4-2998-4&amp;from=paste&amp;height=237&amp;id=u6271fd7c&amp;originHeight=355&amp;originWidth=1536&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=242473&amp;status=done&amp;style=none&amp;taskId=ue28225b1-dbdd-42d2-b6a4-a08b402900a&amp;title=&amp;width=1024" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><ul><li>注意： <ul><li>在涉及到文件上传的操作时，必须将<code>enctype</code>的值设置为<code>multipart/form-data</code></li><li>如果表单的提交不涉及到文件上传操作，则直接将<code>enctype</code>的值设置为<code>application/x-www-form-urlencoded</code></li></ul></li></ul><h3 id="表单的同步提交及缺点" tabindex="-1"><a class="header-anchor" href="#表单的同步提交及缺点" aria-hidden="true">#</a> 表单的同步提交及缺点</h3><ul><li>通过点击<code>submit</code>按钮，触发表单提交的操作，从而使页面跳转到<code>action URL</code>的行为，叫做表单的同步提交</li><li>缺点： <ul><li><code>&lt;form&gt;</code>表单同步提交后，整个页面会发生跳转，跳转到<code>action URL</code>地址，用户体验感差。</li><li><code>&lt;form&gt;</code>表单同步提交后，页面之前的状态和数据会丢失</li></ul></li><li>解决：表单只负责收集数据，Ajax负责提交数据</li></ul><h2 id="通过ajax提交表单数据" tabindex="-1"><a class="header-anchor" href="#通过ajax提交表单数据" aria-hidden="true">#</a> 通过<code>Ajax</code>提交表单数据</h2><h3 id="监听表单提交事件" tabindex="-1"><a class="header-anchor" href="#监听表单提交事件" aria-hidden="true">#</a> 监听表单提交事件</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#forml&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#forml&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;submit&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="阻止表单默认提交行为" tabindex="-1"><a class="header-anchor" href="#阻止表单默认提交行为" aria-hidden="true">#</a> 阻止表单默认提交行为</h3><ul><li><code>e.preventDefault()</code></li></ul><h3 id="快速获取表单中的数据" tabindex="-1"><a class="header-anchor" href="#快速获取表单中的数据" aria-hidden="true">#</a> 快速获取表单中的数据</h3><ol><li><code>serialize()</code>函数 <ol><li>语法：<code>$(selector).serialize()</code></li><li>可以一次性获取到表单中所有的数据</li><li>注意：使用<code>serialize()</code>函数快速获取表单数据时，需要给每个表单元素添加<code>name</code>属性</li></ol></li></ol><h2 id="模板引擎" tabindex="-1"><a class="header-anchor" href="#模板引擎" aria-hidden="true">#</a> 模板引擎</h2><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h3><ul><li>可以根据程序员指定的模板结构和数据，自动生成一个完整的HTML页面</li><li>优势： <ul><li>减少了字符串的拼接操作</li><li>使代码结构更清晰</li><li>便于阅读和维护</li></ul></li></ul><h3 id="art-template" tabindex="-1"><a class="header-anchor" href="#art-template" aria-hidden="true">#</a> <code>art-template</code></h3>`,30),r={href:"http://aui.github.io/art-template/zh-cn/docs/installation.html",target:"_blank",rel:"noopener noreferrer"},u=n(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;text/html&quot;</span> id <span class="token operator">=</span> <span class="token string">&quot;tpl-user&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span> <span class="token operator">:</span> <span class="token string">&#39;朱杰&#39;</span><span class="token punctuation">}</span>
    <span class="token keyword">let</span> ans <span class="token operator">=</span> <span class="token function">template</span><span class="token punctuation">(</span><span class="token string">&#39;tpl-user&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="art-template标准语法" tabindex="-1"><a class="header-anchor" href="#art-template标准语法" aria-hidden="true">#</a> <code>art-template</code>标准语法</h3><ul><li><code>art-template</code>提供了<code>{{}}</code>语法格式，在<code>{{}}</code>内可以进行变量输出，或循环数组等操作</li></ul><h4 id="标准语法-原文输出" tabindex="-1"><a class="header-anchor" href="#标准语法-原文输出" aria-hidden="true">#</a> 标准语法-原文输出</h4><ul><li><code>{{@ value}}</code></li><li>如果要输出的<code>value</code>值中，包含了HTML 标签结构，则需要使用原文输出语法，才能保证 HTML 标签被正常渲染</li></ul><h4 id="标准语法-条件输出" tabindex="-1"><a class="header-anchor" href="#标准语法-条件输出" aria-hidden="true">#</a> 标准语法-条件输出</h4><ul><li>如果要实现条件输出，则可以在<code>{{}}</code>中使用<code>if...else if.../if</code>的方式，进行按需输出。</li><li><code>{{if value}} 按需输出的内容 {{/if}}</code></li><li><code>{{if v1}} 按需输出的内容 {{else if v2}} 按需输出的内容 {{/if}}</code></li></ul><h4 id="标准语法-循环输出" tabindex="-1"><a class="header-anchor" href="#标准语法-循环输出" aria-hidden="true">#</a> 标准语法-循环输出</h4><ul><li>如果要实现循环输出， 则可以在<code>{{}}</code>内，通过<code>each</code>语法循环数组，当前循环的索引使用<code>$index</code>进行访问，当前的循环项使用<code>$value</code>进行访问</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span><span class="token punctuation">{</span>each arr<span class="token punctuation">}</span><span class="token punctuation">}</span>
		<span class="token punctuation">{</span><span class="token punctuation">{</span>$index<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>$value<span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token operator">/</span>each<span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="过滤器" tabindex="-1"><a class="header-anchor" href="#过滤器" aria-hidden="true">#</a> 过滤器</h4><ul><li><code>{{value | filterName}}</code></li><li>过滤器语法类似管道操作符，它的上一个输出作为下一个输入</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>template<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>imports<span class="token punctuation">.</span><span class="token function-variable function">filterName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//return 处理的结果}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="模板引擎的实现原理" tabindex="-1"><a class="header-anchor" href="#模板引擎的实现原理" aria-hidden="true">#</a> 模板引擎的实现原理</h3><h4 id="正则与字符串操作" tabindex="-1"><a class="header-anchor" href="#正则与字符串操作" aria-hidden="true">#</a> 正则与字符串操作</h4><h5 id="exec-函数" tabindex="-1"><a class="header-anchor" href="#exec-函数" aria-hidden="true">#</a> <code>exec()</code>函数</h5><ul><li><code>exec()</code>函数用于检索字符串中正则表达式的匹配</li><li>如果字符串中有匹配的值，则返回该匹配值，否则返回null</li><li><code>RegExpObject.exec(string)</code></li></ul><h5 id="分组" tabindex="-1"><a class="header-anchor" href="#分组" aria-hidden="true">#</a> 分组</h5><ul><li>正则表达式中 <code>()</code>包起来的内容表示一个分组，可以通过分组来提取自己想要的内容</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;&lt;div&gt;我是{{name}}&lt;/div&gt;&#39;</span>
<span class="token keyword">let</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">{{([a-zA-Z]+)}}</span><span class="token regex-delimiter">/</span></span>

<span class="token keyword">let</span> patternResult <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>

<span class="token comment">//得到name 相关的分组信息</span>
<span class="token comment">//[&quot;{{name}}&quot;,&quot;name&quot;,index:7,input:&quot;&lt;div&gt;我是{{name}}&lt;/div&gt;&quot;,groups:undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="字符串的replace函数" tabindex="-1"><a class="header-anchor" href="#字符串的replace函数" aria-hidden="true">#</a> 字符串的<code>replace</code>函数</h5><ul><li><code>replace()</code>函数用于在字符串中用一些字符替换另一些字符</li></ul><h5 id="多次replace" tabindex="-1"><a class="header-anchor" href="#多次replace" aria-hidden="true">#</a> 多次<code>replace</code></h5><figure><img src="https://cdn.nlark.com/yuque/0/2023/png/35273604/1685698316886-3197a449-081c-4f36-944c-d0eb44ec76ff.png#averageHue=%23e1eaf7&amp;clientId=u9b834885-cc5a-4&amp;from=paste&amp;height=429&amp;id=ud2e9a23a&amp;originHeight=643&amp;originWidth=1606&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=316552&amp;status=done&amp;style=none&amp;taskId=u1bd54859-2d7a-4f1e-8aa7-b78af699433&amp;title=&amp;width=1070.6666666666667" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure>`,24);function h(m,k){const s=i("ExternalLinkIcon");return o(),c("div",null,[d,a("ul",null,[a("li",null,[e("文档："),a("a",r,[e("http://aui.github.io/art-template/zh-cn/docs/installation.html"),l(s)])])]),u])}const v=t(p,[["render",h],["__file","Ajax--表单.html.vue"]]);export{v as default};
