import{createRequire as x}from"node:module";import{tex as d}from"@mdit/plugin-tex";const a=e=>e.replace(/&/gu,"&amp;").replace(/</gu,"&lt;").replace(/>/gu,"&gt;").replace(/"/gu,"&quot;").replace(/'/gu,"&#039;"),s=x(import.meta.url),w=(e,o,r)=>{try{return o.renderToString(e,{...r,displayMode:!1})}catch(t){return r.throwOnError&&console.warn(t),`<span class='katex-error' title='${a(t.toString())}'>${a(e)}</span>`}},y=(e,o,r)=>{try{return`<p class='katex-block'>${o.renderToString(e,{...r,displayMode:!0})}</p>
`}catch(t){return r.throwOnError&&console.warn(t),`<p class='katex-block katex-error' title='${a(t.toString())}'>${a(e)}</p>
`}},$=(e,o={})=>{const{mathFence:r=!1,mhchem:t=!1,logger:p=n=>n==="newLineInDisplayMode"?"ignore":"warn",...i}=o;try{const n=s("katex");t&&s("katex/contrib/mhchem"),e.use(d,{mathFence:r,render:(c,u,g)=>{const l={strict:(m,h,k)=>p(m,h,k,g)??"ignore",throwOnError:!1,...i};return u?y(c,n,l):w(c,n,l)}})}catch{console.error('[@mdit/plugin-katex]: You should install "katex"!')}};export{$ as katex};
//# sourceMappingURL=index.mjs.map
